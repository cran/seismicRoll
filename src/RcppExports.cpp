// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// roll_mean_numeric_vector
NumericVector roll_mean_numeric_vector(NumericVector x, int n, int increment, int alignCode);
RcppExport SEXP seismicRoll_roll_mean_numeric_vector(SEXP xSEXP, SEXP nSEXP, SEXP incrementSEXP, SEXP alignCodeSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type increment(incrementSEXP );
        Rcpp::traits::input_parameter< int >::type alignCode(alignCodeSEXP );
        NumericVector __result = roll_mean_numeric_vector(x, n, increment, alignCode);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// roll_median_numeric_vector
NumericVector roll_median_numeric_vector(NumericVector x, int n, int increment);
RcppExport SEXP seismicRoll_roll_median_numeric_vector(SEXP xSEXP, SEXP nSEXP, SEXP incrementSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type increment(incrementSEXP );
        NumericVector __result = roll_median_numeric_vector(x, n, increment);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// roll_hampel_numeric_vector
NumericVector roll_hampel_numeric_vector(NumericVector x, int n, int increment);
RcppExport SEXP seismicRoll_roll_hampel_numeric_vector(SEXP xSEXP, SEXP nSEXP, SEXP incrementSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type increment(incrementSEXP );
        NumericVector __result = roll_hampel_numeric_vector(x, n, increment);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// roll_sd_numeric_vector
NumericVector roll_sd_numeric_vector(NumericVector x, int n, int increment, int alignCode);
RcppExport SEXP seismicRoll_roll_sd_numeric_vector(SEXP xSEXP, SEXP nSEXP, SEXP incrementSEXP, SEXP alignCodeSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type increment(incrementSEXP );
        Rcpp::traits::input_parameter< int >::type alignCode(alignCodeSEXP );
        NumericVector __result = roll_sd_numeric_vector(x, n, increment, alignCode);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// roll_stalta_numeric_vector
NumericVector roll_stalta_numeric_vector(NumericVector x, int n_sta, int n_lta, int increment);
RcppExport SEXP seismicRoll_roll_stalta_numeric_vector(SEXP xSEXP, SEXP n_staSEXP, SEXP n_ltaSEXP, SEXP incrementSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< int >::type n_sta(n_staSEXP );
        Rcpp::traits::input_parameter< int >::type n_lta(n_ltaSEXP );
        Rcpp::traits::input_parameter< int >::type increment(incrementSEXP );
        NumericVector __result = roll_stalta_numeric_vector(x, n_sta, n_lta, increment);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
